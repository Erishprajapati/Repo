# Generated by Django 5.1.6 on 2025-03-05 16:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
# from django.contrib.auth.models import Group, User


# def assign_roles_to_users(apps, schema_editor):
#     # Get or create the groups (admin, user, company)
#     admin_group, created = Group.objects.get_or_create(name='admin')
#     user_group, created = Group.objects.get_or_create(name='user')
#     company_group, created = Group.objects.get_or_create(name='company')

#     # Example: Assign users based on some conditions (you can customize this logic)

#     # Assign all users to the 'user' group
#     users = User.objects.all()
#     for user in users:
#         # You can customize the logic for assigning groups
#         if user.is_staff:  # Example: Assign staff users to the 'admin' group
#             user.groups.add(admin_group)
#         elif user.email.endswith('@company.com'):  # Example: Assign company users to the 'company' group
#             user.groups.add(company_group)
#         else:
#             user.groups.add(user_group)
class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted_at', models.DateTimeField(auto_created=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('website', models.URLField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('role', models.CharField(max_length=100)),
                ('salary', models.IntegerField()),
                ('posted_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Backend.company')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.FileField(upload_to='resumes/')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected')], default='Pending', max_length=10)),
                ('applied_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Backend.job')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('profile_pic', models.ImageField(default=False, null=True, upload_to='profile_pictures/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
